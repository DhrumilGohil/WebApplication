@model EmployeeForm.Models.Employee
@using EmployeeForm.Models

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
    <script src="~/Scripts/jquery-3.4.1.min.js"></script>
    <script src="~/Scripts/bootstrap.min.js"></script>
    <link href="~/Content/bootstrap.min.css" rel="stylesheet" />
    <link href="~/Css/Style.css" rel="stylesheet" />
</head>
<body>
    <div class="container-fluid-lg" style="border:0px solid;">
        <div class="row">
            @Html.Partial("Sidebar")
            <div class="col-lg-10">

                @using (Html.BeginForm("AddEmp", "Employee"))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="row justify-content-center" style="border:0px solid;">
                        <div class="col-lg-12 d-block text-center">
                            <h1 class="Header" style="border:0px solid;">Employee Form</h1>
                        </div>
                    </div>
                    <div class="form-box mt-5 pl-5">
                        <div class="row">
                            <div class="col-lg-6 mt-5">
                                @Html.LabelFor(model => model.FirstName, new { @class = "ml-1 font-weight-bold" })
                                <div class="form-group">
                                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { PlaceHolder = "Enter First Name", @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-lg-6 mt-5">
                                @Html.LabelFor(model => model.MiddleName, new { @class = "ml-1 font-weight-bold" })
                                <div class="form-group">
                                    @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { PlaceHolder = "Enter Middle Name", @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-lg-6 mt-5">
                                @Html.LabelFor(model => model.LastName, new { @class = "ml-1 font-weight-bold" })
                                <div class="form-group">
                                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { PlaceHolder = "Enter Last Name", @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-lg-6 mt-5">
                                @Html.LabelFor(model => model.EmployeeType, new { @class = "ml-1 font-weight-bold" })
                                <div class="form-group">
                                    <div class="form-group">
                                        @Html.DropDownList("EmployeeType", new SelectList(Enum.GetValues(typeof(EmpType))), "Employee Type", new { @class = "form-control EmployeeType" })
                                        @Html.ValidationMessageFor(model => model.EmployeeType, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-lg-6 mt-5">
                                @Html.LabelFor(model => model.Email, new { @class = "ml-1 font-weight-bold" })
                                <div class="form-group">
                                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { PlaceHolder = "Enter Email", @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-lg-6 mt-5">
                                @Html.LabelFor(model => model.Gender, new { @class = "ml-1 font-weight-bold" })
                                <div class="form-group">
                                    @Html.DropDownList("Gender", new SelectList(Enum.GetValues(typeof(Gender))), "Choose Gender", new { @class = "form-control Gender" })
                                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-lg-6 mt-5">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.PresentAddress, new { @class = "ml-1 font-weight-bold" })
                                    @Html.TextAreaFor(model => model.PresentAddress, new { @rows = "3", @cols = "10", PlaceHolder = "Enter Present Address", @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.PresentAddress, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-lg-6 mt-5">
                                <div class="form-group">
                                @Html.LabelFor(model => model.PresentDistrictID, new { @class = "ml-1 font-weight-bold" })
                                    @Html.DropDownList("PresentDistrictID", Enumerable.Empty<SelectListItem>(), "Present DistrictID", new { @class = "form-control District" })
                                    @Html.ValidationMessageFor(model => model.PresentDistrictID, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-lg-6 mt-5">
                                <div class="form-group">
                                @Html.LabelFor(model => model.PresentTalukaID, new { @class = "ml-1 font-weight-bold" })
                                    @Html.DropDownList("PresentTalukaID", Enumerable.Empty<SelectListItem>(), "Present TalukaID", new { @class = "form-control PresentTaluka" })
                                    @Html.ValidationMessageFor(model => model.PresentTalukaID, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-lg-6 mt-5">
                                <div class="form-group">
                                @Html.LabelFor(model => model.PresentPINCODE, new { @class = "ml-1 font-weight-bold" })
                                    @Html.EditorFor(model => model.PresentPINCODE, new { htmlAttributes = new { PlaceHolder = "Enter Present PINCODE", @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.PresentPINCODE, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-lg-6 mt-5">
                                <div class="form-group">
                                @Html.LabelFor(model => model.NativeAddress, new { @class = "ml-1 font-weight-bold" })
                                    @Html.TextAreaFor(model => model.NativeAddress, new { @rows = "3", @cols = "10", PlaceHolder = "Enter Native Address", @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.NativeAddress, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-lg-6 mt-5">
                                <div class="form-group">
                                @Html.LabelFor(model => model.NativeDistrictID, new { @class = "ml-1 font-weight-bold" })
                                    @Html.DropDownList("NativeDistrictID", Enumerable.Empty<SelectListItem>(), "Native DistrictID", new { @class = "form-control NativeDistrict" })
                                    @Html.ValidationMessageFor(model => model.NativeDistrictID, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-lg-6 mt-5">
                                <div class="form-group">
                                @Html.LabelFor(model => model.NativeTalukaID, new { @class = "ml-1 font-weight-bold" })
                                    @Html.DropDownList("NativeTalukaID", Enumerable.Empty<SelectListItem>(), "Native TalukaID", new { @class = "form-control NativeTaluka" })
                                    @Html.ValidationMessageFor(model => model.NativeTalukaID, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-lg-6 mt-5">
                                <div class="form-group">
                                @Html.LabelFor(model => model.NativePINCODE, new { @class = "ml-1 font-weight-bold" })
                                    @Html.EditorFor(model => model.PresentPINCODE, new { htmlAttributes = new { PlaceHolder = "Enter Native PINCODE", @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.PresentPINCODE, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>




                        <div class="row">
                            <div class="col-lg-6 mt-5">
                                <div class="form-group">
                                @Html.LabelFor(model => model.PhoneNumber, new { @class = "ml-1 font-weight-bold" })
                                    @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { PlaceHolder = "Enter Phone Number", @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-lg-6 mt-5">
                                <div class="form-group">
                                @Html.LabelFor(model => model.AlternatePhoneNumber, new { @class = "ml-1 font-weight-bold" })
                                    @Html.EditorFor(model => model.AlternatePhoneNumber, new { htmlAttributes = new { PlaceHolder = "Enter Alternate Number", @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.AlternatePhoneNumber, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-lg-6 mt-5">
                                <div class="form-group">
                                @Html.LabelFor(model => model.EmergencyContactNumber, new { @class = "ml-1 font-weight-bold" })
                                    @Html.EditorFor(model => model.EmergencyContactNumber, new { htmlAttributes = new { PlaceHolder = "Emergency Phone Number", @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.EmergencyContactNumber, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-lg-6 mt-5">
                                <div class="form-group">
                                @Html.LabelFor(model => model.EmergencyContactName, new { @class = "ml-1 font-weight-bold" })
                                    @Html.EditorFor(model => model.EmergencyContactName, new { htmlAttributes = new { PlaceHolder = "Emergency ContactName", @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.EmergencyContactName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-lg-6 mt-5">
                                <div class="form-group">
                                @Html.LabelFor(model => model.DateOfBirth, new { @class = "ml-1 font-weight-bold" })
                                    @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control DOB" } })
                                    @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-lg-6 mt-5">
                                <div class="form-group">
                                @Html.LabelFor(model => model.Dateofjoin, new { @class = "ml-1 font-weight-bold" })
                                    @Html.EditorFor(model => model.Dateofjoin, new { htmlAttributes = new { @class = "form-control DOJ" } })
                                    @Html.ValidationMessageFor(model => model.Dateofjoin, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-lg-6 mt-5">
                                <div class="form-group">
                                @Html.LabelFor(model => model.DateofRetirement, new { @class = "ml-1 font-weight-bold" })
                                    @Html.EditorFor(model => model.DateofRetirement, new { htmlAttributes = new { @class = "form-control DOR" } })
                                    @Html.ValidationMessageFor(model => model.DateofRetirement, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-lg-6 mt-5">
                                <div class="form-group">
                                @Html.LabelFor(model => model.DistrictJoiningDate, new { @class = "ml-1 font-weight-bold" })
                                    @Html.EditorFor(model => model.DistrictJoiningDate, new { htmlAttributes = new { @class = "form-control DODJ" } })
                                    @Html.ValidationMessageFor(model => model.DistrictJoiningDate, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-lg-6 mt-5">
                                <div class="form-group">
                                @Html.LabelFor(model => model.EmployeeEntryinDistrict, new { @class = "ml-1 font-weight-bold" })
                                    @Html.DropDownList("EmployeeEntryinDistrict", new SelectList(Enum.GetValues(typeof(EmployeeEntry))), "Employee Entry", new { @class = "form-control EmpEntry" })
                                    @Html.ValidationMessageFor(model => model.EmployeeEntryinDistrict, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-lg-6 mt-5">
                                <div class="form-group">
                                @Html.LabelFor(model => model.AgencyID, new { @class = "ml-1 font-weight-bold" })
                                    @Html.DropDownList("AgencyID", Enumerable.Empty<SelectListItem>(), "AgencyID", new { PlaceHolder = "Agency ID", @class = "form-control Agency" })
                                    @Html.ValidationMessageFor(model => model.AgencyID, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-lg-6 mt-5">
                                <div class="form-group">
                                @Html.LabelFor(model => model.CreatedBy, new { @class = "ml-1 font-weight-bold" })
                                    @Html.EditorFor(model => model.CreatedBy, new { htmlAttributes = new { PlaceHolder = "Created By", @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.CreatedBy, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-lg-6 mt-5">
                                <div class="form-group">
                                @Html.LabelFor(model => model.UpdatedBy, new { @class = "ml-1 font-weight-bold" })
                                    @Html.EditorFor(model => model.UpdatedBy, new { htmlAttributes = new { placeholder = "Updated By", @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.UpdatedBy, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="submit text-center mt-5">
                            <button type="submit" class="btn btn-primary font-weight-bold p-2 px-5 mx-auto">Submit</button>
                        </div>
                    </div>
                }


            </div>
        </div>
    </div>

    </body>
</html>
<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script type="text/javascript">
    $(document).ready(function () {

        
        var options = "";
        $.ajax({
            url: "/Employee/GetAllAgencies",
            type: "GET",
            datatype: "json",
            success: function (data) {
                for (var i = 0; i < data.length; i++) {                    
                    options = '<option value="' + data[i]["AgencyID"]+ '">' + data[i]["AgencyName"] + '</option>';
                    $(".Agency").append(options);
                }
            },
            error: function (e) {
                alert(e.statusText);
            }
        });

        $.ajax({
            url: "/Employee/GetAllDistrict",
            type: "GET",
            dataType: "json",
            success: function (data) {
                console.log(data);
                for (var i = 0; i < data.length; i++) {
                    options = '<option value="' + data[i]["DistrictID"] + '">' + data[i]["DistrictName"] + '</option>';
                    $(".District").append(options);
                    $(".NativeDistrict").append(options);
                }
            },
            error: function (e) {
                alert(e.statusText);
            }
        });



        $(".District").change(function () {
            var DistrictID = $(".District").val();            
            alert(DistrictID);
            var length = $(".PresentTaluka").length;
            var options = '';
            $.ajax({
                url: "/Employee/GetAllTalukas", 
                type: "GET",
                data: {'Empid' : DistrictID},
                dataType: "json",
                success: function (data) {
                    if (length > 0) {
                        $(".PresentTaluka").empty();  
                    }
                    for (var i = 0; i < data.length; i++) {
                        options = '<option value="' + data[i]["TalukaID"] + '">' + data[i]["TalukaName"] + '</option>';
                        $(".PresentTaluka").append(options);
                    }
                },
                error: function (e) {
                    alert(e.statusText);
                }
            });
        });


        $(".NativeDistrict").change(function () {
            var DistrictID = $(".NativeDistrict").val();
            //alert(DistrictID); new SelectList((System.Collections.IEnumerable)ViewData["District"])
            var options = '';
            var length = $(".NativeTaluka").length;
            $.ajax({
                url: "/Employee/GetAllTalukas",
                type: "GET",
                data: { 'Empid': DistrictID },
                dataType: "json",
                success: function (data) {
                    if (length > 0) {
                        $(".NativeTaluka").empty();
                    }
                    for (var i = 0; i < data.length; i++) {
                        options = '<option value="' + data[i]["TalukaID"]+ '">' + data[i]["TalukaName"] + '</option>';
                        $(".NativeTaluka").append(options);
                    }
                },
                error: function (e) {
                    alert(e.statusText);
                }
            });
        });
    });
</script>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
