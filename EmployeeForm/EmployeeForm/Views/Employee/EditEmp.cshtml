@model EmployeeForm.Models.Employee
@using EmployeeForm.Models
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - My ASP.NET Application</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
    <link href="~/Css/Style.css" rel="stylesheet" />
    <script src="~/Scripts/jquery-3.5.1.min.js"></script>

</head>
<body>
    <div class="wrapper" style="border:0px solid;">
        @Html.Partial("Sidebar")

        @using (Html.BeginForm("EditEmp", "Employee"))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="row justify-content-center" style="border:0px solid;">
                <div class="col-lg-12 d-block text-center">
                    <h1 class="Header" style="border:0px solid;">Edit Employee</h1>
                </div>
            </div>
            <div class="form-box mt-5 pl-5">

                <div class="row">
                    <div class="col-lg-6 mt-5">
                        @Html.LabelFor(model => model.FirstName, new { @class = "ml-1 font-weight-bold" })
                        <div class="form-group">
                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { PlaceHolder = "Enter First Name", @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-lg-6 mt-5">
                        @Html.LabelFor(model => model.MiddleName, new { @class = "ml-1 font-weight-bold" })
                        <div class="form-group">
                            @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { PlaceHolder = "Enter Middle Name", @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-lg-6 mt-5">
                        @Html.LabelFor(model => model.LastName, new { @class = "ml-1 font-weight-bold" })
                        <div class="form-group">
                            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { PlaceHolder = "Enter Last Name", @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-lg-6 mt-5">
                        @Html.LabelFor(model => model.EmployeeType, new { @class = "ml-1 font-weight-bold" })
                        <div class="form-group">
                            <div class="form-group">
                                <select id="Emptype" class="Emptype form-control"></select>
                                @Html.ValidationMessageFor(model => model.EmployeeType, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-lg-6 mt-5">
                        @Html.LabelFor(model => model.Email, new { @class = "ml-1 font-weight-bold" })
                        <div class="form-group">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { PlaceHolder = "Enter Email", @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-lg-6 mt-5">
                        @Html.LabelFor(model => model.Gender, new { @class = "ml-1 font-weight-bold" })
                        <div class="form-group">
                            <select id="Gender" class="Gender form-control"></select>
                            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-lg-6 mt-5">
                        @Html.LabelFor(model => model.PresentAddress, new { @class = "ml-1 font-weight-bold" })
                        <div class="form-group">
                            @Html.TextAreaFor(model => model.PresentAddress, new { @rows = "3", @cols = "10", PlaceHolder = "Enter Present Address", @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.PresentAddress, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-lg-6 mt-5">
                        @Html.LabelFor(model => model.PresentDistrictID, new { @class = "ml-1 font-weight-bold" })
                        <div class="form-group">
                            <select id="PDID" class="PDID form-control"></select>
                            @Html.ValidationMessageFor(model => model.PresentDistrictID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-lg-6 mt-5">
                        @Html.LabelFor(model => model.PresentTalukaID, new { @class = "ml-1 font-weight-bold" })
                        <div class="form-group">
                            <select id="PTID" class="PTID form-control"></select>
                            @Html.ValidationMessageFor(model => model.PresentTalukaID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-lg-6 mt-5">
                        @Html.LabelFor(model => model.PresentPINCODE, new { @class = "ml-1 font-weight-bold" })
                        <div class="form-group">
                            @Html.EditorFor(model => model.PresentPINCODE, new { htmlAttributes = new { PlaceHolder = "Enter Present PINCODE", @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PresentPINCODE, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-lg-6 mt-5">
                        @Html.LabelFor(model => model.NativeAddress, new { @class = "ml-1 font-weight-bold" })
                        <div class="form-group">
                            @Html.TextAreaFor(model => model.NativeAddress, new { @rows = "3", @cols = "10", PlaceHolder = "Enter Native Address", @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.NativeAddress, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-lg-6 mt-5">
                        @Html.LabelFor(model => model.NativeDistrictID, new { @class = "ml-1 font-weight-bold" })
                        <div class="form-group">
                            <select id="NDID" class="NDID form-control"></select>
                            @Html.ValidationMessageFor(model => model.NativeDistrictID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-lg-6 mt-5">
                        @Html.LabelFor(model => model.NativeTalukaID, new { @class = "ml-1 font-weight-bold" })
                        <div class="form-group">
                            <select id="NTID" class="NTID form-control"></select>
                            @Html.ValidationMessageFor(model => model.NativeTalukaID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-lg-6 mt-5">
                        @Html.LabelFor(model => model.NativePINCODE, new { @class = "ml-1 font-weight-bold" })
                        <div class="form-group">
                            @Html.EditorFor(model => model.PresentPINCODE, new { htmlAttributes = new { PlaceHolder = "Enter Native PINCODE", @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PresentPINCODE, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>




                <div class="row">
                    <div class="col-lg-6 mt-5">
                        @Html.LabelFor(model => model.PhoneNumber, new { @class = "ml-1 font-weight-bold" })
                        <div class="form-group">
                            @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { PlaceHolder = "Enter Phone Number", @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-lg-6 mt-5">
                        @Html.LabelFor(model => model.AlternatePhoneNumber, new { @class = "ml-1 font-weight-bold" })
                        <div class="form-group">
                            @Html.EditorFor(model => model.AlternatePhoneNumber, new { htmlAttributes = new { PlaceHolder = "Enter Alternate Number", @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.AlternatePhoneNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-lg-6 mt-5">
                        @Html.LabelFor(model => model.EmergencyContactNumber, new { @class = "ml-1 font-weight-bold" })
                        <div class="form-group">
                            @Html.EditorFor(model => model.EmergencyContactNumber, new { htmlAttributes = new { PlaceHolder = "Emergency Phone Number", @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.EmergencyContactNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-lg-6 mt-5">
                        @Html.LabelFor(model => model.EmergencyContactName, new { @class = "ml-1 font-weight-bold" })
                        <div class="form-group">
                            @Html.EditorFor(model => model.EmergencyContactName, new { htmlAttributes = new { PlaceHolder = "Emergency ContactName", @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.EmergencyContactName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-lg-6 mt-5">
                        @Html.LabelFor(model => model.DateOfBirth, new { @class = "ml-1 font-weight-bold" })
                        <div class="form-group">
                            @Html.TextBoxFor(model => model.DateOfBirth, new { @type = "date", @class = "form-control DOB datepicker" })
                            @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-lg-6 mt-5">
                        @Html.LabelFor(model => model.Dateofjoin, new {@class = "ml-1 font-weight-bold" })
                        <div class="form-group">
                            @Html.TextBoxFor(model => model.Dateofjoin, new { @class = "form-control DOJ datepicker" })
                            @Html.ValidationMessageFor(model => model.Dateofjoin, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-lg-6 mt-5">
                        @Html.LabelFor(model => model.DateofRetirement, new { @class = "ml-1 font-weight-bold" })
                        <div class="form-group">
                            @Html.TextBoxFor(model => model.DateofRetirement, new { @class = "form-control DOR datepicker" })
                            @Html.ValidationMessageFor(model => model.DateofRetirement, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-lg-6 mt-5">
                        @Html.LabelFor(model => model.DistrictJoiningDate, new { @class = "ml-1 font-weight-bold" })
                        <div class="form-group">
                            @Html.TextBoxFor(model => model.DistrictJoiningDate, new { @class = "form-control DODJ datepicker" })
                            @Html.ValidationMessageFor(model => model.DistrictJoiningDate, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-lg-6 mt-5">
                        @Html.LabelFor(model => model.EmployeeEntryinDistrict, new { @class = "ml-1 font-weight-bold" })
                        <div class="form-group">
                            @Html.DropDownList("EmployeeEntryinDistrict", new SelectList(Enum.GetValues(typeof(EmployeeEntry))), "Employee Entry", new { @class = "form-control EmpEntry" })
                            @Html.ValidationMessageFor(model => model.EmployeeEntryinDistrict, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-lg-6 mt-5">
                        @Html.LabelFor(model => model.AgencyID, new { @class = "ml-1 font-weight-bold" })
                        <div class="form-group">
                            @Html.DropDownList("AgencyID", Enumerable.Empty<SelectListItem>(), "AgencyID", new { PlaceHolder = "Agency ID", @class = "form-control Agency" })
                            @Html.ValidationMessageFor(model => model.AgencyID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-lg-6 mt-5">
                        @Html.LabelFor(model => model.CreatedBy, new { @class = "ml-1 font-weight-bold" })
                        <div class="form-group">
                            @Html.EditorFor(model => model.CreatedBy, new { htmlAttributes = new { PlaceHolder = "Created By", @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CreatedBy, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-lg-6 mt-5">
                        @Html.LabelFor(model => model.UpdatedBy, new { @class = "ml-1 font-weight-bold" })
                        <div class="form-group">
                            @Html.EditorFor(model => model.UpdatedBy, new { htmlAttributes = new { placeholder = "Updated By", @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.UpdatedBy, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="submit text-center mt-5">
                    <button type="submit" class="btn btn-primary font-weight-bold p-2 px-5 mx-auto">Submit</button>
                </div>
            </div>
        }
    </div>

</body>
</html>
<script src="~/Scripts/jquery-3.5.1.min.js"></script>


<script type="text/javascript">
    $(document).ready(function () {
        
        var options = "";
        if ("@ViewBag.Gender" == "@Gender.Male") {
            options = '<option value="' + 0 + '" selected>' + "@Gender.Male" + '</option>';
            $(".Gender").append(options);
            $(".Gender").append('<option value="' + 2 + '">' + "@Gender.Female" + '</option>')
            $(".Gender").append('<option value="' + 3 + '">' + "@Gender.Other" + '</option>')
        }
        else if ("@ViewBag.Gender" == "@Gender.Female") {
            $(".Gender").append('<option value="' + 0 + '">' + "@Gender.Male" + '</option>')
            options = '<option value="' + 1 + '" selected>' + "@Gender.Female" + '</option>';
            $(".Gender").append(options);
            $(".Gender").append('<option value="' + 2 + '">' + "@Gender.Other" + '</option>')
        }
        else {
            $(".Gender").append('<option value="' + 0 + '">' + "@Gender.Male" + '</option>')
            $(".Gender").append('<option value="' + 1 + '">' + "@Gender.Female" + '</option>')
            options = '<option value="' + 2 + '" selected>' + "@Gender.Other" + '</option>';
            $(".Gender").append(options);
        }


       
         if ("@ViewBag.EmployeeType" == "@EmpType.Goverment") {
            $(".EmpType").append('<option value="' + 1 + '">' + "@EmpType.NonGoverment" + '</option>')
            options = '<option value="' + 0 + '" selected>' + "@EmpType.Goverment" + '</option>';
            $(".Emptype").append(options);
        }
        else  {
             $(".Gender").append('<option value="' + 0 + '">' + "@EmpType.Goverment" + '</option>')
             options = '<option value="' + 1 + '" selected>' + "@EmpType.NonGoverment" + '</option>';
             $(".Emptype").append(options);
        }


        $.ajax({
            url: "/Employee/GetAllAgencies",
            type: "GET",
            datatype: "json",
            success: function (data) {

                for (var i = 0; i < data.length; i++) {
                    if (@ViewBag.AgencyId == data[i]["AgencyID"]) {
                        options = '<option value="' + data[i]["AgencyID"] + '" selected>' + data[i]["AgencyName"] + '</option>';
                    }
                    else {
                        options = '<option value="' + data[i]["AgencyID"] + '" >' + data[i]["AgencyName"] + '</option>';
                    }
                    $(".Agency").append(options);
                }
            },
            error: function (e) {
                alert(e.statusText);
            }
        });

        $.ajax({
            url: "/Employee/GetAllDistrict",
            type: "GET",
            dataType: "json",
            success: function (data) {
                console.log(data);
                for (var i = 0; i < data.length; i++) {
                    if (@ViewBag.PdId == data[i]["DistrictID"]) {
                        console.log(data[i])
                        options = '<option value="' + data[i]["DistrictID"] + ' "selected>' + data[i]["DistrictName"] + '</option>';
                    }
                    else {
                        options = '<option value="' + data[i]["DistrictID"] + '">' + data[i]["DistrictName"] + '</option>';
                    }
                    console.log(@ViewBag.PdId);
                    $(".PDID").append(options);

                }
            },
            error: function (e) {
                alert(e.statusText);
            }
        });

         $.ajax({
            url: "/Employee/GetAllDistrict",
            type: "GET",
            dataType: "json",
            success: function (data) {
                console.log(data);
                for (var i = 0; i < data.length; i++) {
                    if (@ViewBag.NdId == data[i]["DistrictID"]) {
                        options = '<option value="' + data[i]["DistrictID"] + ' "selected>' + data[i]["DistrictName"] + '</option>';
                    }
                    else {
                        options = '<option value="' + data[i]["DistrictID"] + '">' + data[i]["DistrictName"] + '</option>';
                    }
                    $(".NDID").append(options);

                }
            },
            error: function (e) {
                alert(e.statusText);
            }
        });

         var options = '';
            $.ajax({
                url: "/Employee/GetAllTalukas",
                type: "GET",
                data: { 'Empid': 0 },
                dataType: "json",
                success: function (data) {

                    if (length > 0) {
                        $(".PTID").empty();
                    }
                    for (var i = 0; i < data.length; i++) {
                        if (@ViewBag.PtId == data[i]["TalukaID"]) {
                            options = '<option value="' + data[i]["TalukaID"] + ' "selected>' + data[i]["TalukaName"] + '</option>';
                        }
                        else {
                            options = '<option value="' + data[i]["TalukaID"] + '">' + data[i]["TalukaName"] + '</option>';
                        }

                        $(".PTID").append(options);
                    }
                },
                error: function (e) {
                    alert(e.statusText);
                }
            });

         var options = '';
            $.ajax({
                url: "/Employee/GetAllTalukas",
                type: "GET",
                data: { 'Empid': 0 },
                dataType: "json",
                success: function (data) {
                    for (var i = 0; i < data.length; i++) {
                        if (@ViewBag.NtId == data[i]["TalukaID"]) {
                            options = '<option value="' + data[i]["TalukaID"] + ' "selected>' + data[i]["TalukaName"] + '</option>';
                        }
                        else {
                            options = '<option value="' + data[i]["TalukaID"] + '">' + data[i]["TalukaName"] + '</option>';
                        }
                        $(".NTID").append(options);
                    }
                },
                error: function (e) {
                    alert(e.statusText);
                }
            });


        $(".PDID").change(function () {
            var DistrictID = $(".PDID").val();
            var length = $(".PTID").length;
            var options = '';
            $.ajax({
                url: "/Employee/GetAllTalukas",
                type: "GET",
                data: { 'Empid': DistrictID },
                dataType: "json",
                success: function (data) {
                    console.log(data);
                    if (length > 0) {
                        $(".PTID").empty();
                    }
                    for (var i = 0; i < data.length; i++) {

                        if (@ViewBag.PtId == data[i]["TalukaID"]) {
                            options = '<option value="' + data[i]["TalukaID"] + ' "selected>' + data[i]["TalukaName"] + '</option>';
                        }
                        else {
                            options = '<option value="' + data[i]["TalukaID"] + '">' + data[i]["TalukaName"] + '</option>';
                        }
                        $(".PTID").append(options);
                    }
                },
                error: function (e) {
                    alert(e.statusText);
                }
            });
        });


        $(".NDID").change(function () {
            var DistrictID = $(".NDID").val();
            var options = '';
            var length = $(".NTID").length;
            $.ajax({
                url: "/Employee/GetAllTalukas",
                type: "GET",
                data: { 'Empid': DistrictID },
                dataType: "json",
                success: function (data) {
                    if (length > 0) {
                        $(".NTID").empty();
                    }
                    for (var i = 0; i < data.length; i++) {
                        console.log("Hello")
                        if (@ViewBag.NtId == data[i]["TalukaID"]) {
                            options = '<option value="' + data[i]["TalukaID"] + ' "selected>' + data[i]["TalukaName"] + '</option>';
                        }
                        else {
                            options = '<option value="' + data[i]["TalukaID"] + '">' + data[i]["TalukaName"] + '</option>';
                        }
                        $(".NTID").append(options);
                    }
                },
                error: function (e) {
                    alert(e.statusText);
                }
            });
        });
    });
</script>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

