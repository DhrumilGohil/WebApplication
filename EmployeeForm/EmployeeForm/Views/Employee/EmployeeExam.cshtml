@model EmployeeForm.Models.EmployeeExam
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title></title>

    <link href="~/Css/style.css" rel="stylesheet" />

</head>
<body>
    <div class="wrapper">
        <div class="row">
            @Html.Partial("Sidebar")
            <div class="col-lg-2"></div>
            <div class="col-lg-6">
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                    <div class="row justify-content-center" style="border:0px solid;">
                        <div class="col-lg-12 d-block text-center">
                            <h1 class="Header" style="border:0px solid;">Employee Exam Form</h1>
                        </div>
                    </div>
                    <div class="form-box pb-2 mb-3">
                        <div class="form-horizontal">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group">
                                @Html.LabelFor(model => model.ExamID, htmlAttributes: new { @class = "control-label ml-3" })
                                <div class="col-md-10">
                                    @Html.DropDownListFor(model => model.ExamID, Enumerable.Empty<SelectListItem>(), new { @class = "form-control Exam" })
                                    @Html.ValidationMessageFor(model => model.ExamID, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.PassingDate, htmlAttributes: new { @class = "control-label ml-3" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(model => model.PassingDate, new { @type = "date", @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.PassingDate, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.NumberOfAttempt, htmlAttributes: new { @class = "control-label ml-3" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.NumberOfAttempt, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.NumberOfAttempt, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.CreatedBy, htmlAttributes: new { @class = "control-label ml-3" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.CreatedBy, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.CreatedBy, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="submit text-center ">
                                <button type="submit" class="btn btn-primary font-weight-bold p-2 px-5 mx-auto mt-5">Submit</button>
                            </div>
                        </div>
                    </div>
                }
            </div>
            <div class="col-lg-2"></div>
        </div>
    </div>

</body>
</html>
<script src="~/Scripts/jquery-3.5.1.min.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        $.ajax({
            url: "/Employee/GetExamName",
            dataType: "json",
            type: "GET",
            success: function (data) {

                for (var i = 0; i < data.length; i++) {
                    options = '<option value="' + data[i]["ExamID"] + '">' + data[i]["ExamName"] + '</option>';
                    $(".Exam").append(options);
                }
            },
            error: function () {
                alert(error)
            }
        });

      
    });
</script>


