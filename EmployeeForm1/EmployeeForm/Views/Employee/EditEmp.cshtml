@model IEnumerable<EmployeeForm.Models.Employee>
@using EmployeeForm.Models

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - My ASP.NET Application</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
    <link href="~/Css/Style.css" rel="stylesheet" />

</head>
<body>
    <div class="container-fluid" style="border:0px solid;">
        <div class="row">
            @Html.Partial("Sidebar")
            <div class="col-lg-10">

                @using (Html.BeginForm("EditEmp","Employee"))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="row justify-content-center" style="border:0px solid;">
                        <div class="col-lg-12 d-block text-center">
                            <h1 class="Header" style="border:0px solid;">Edit Employee</h1>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-12">
                            @Html.TextBox("Search", "", new { PlaceHolder = "Search...", @class = "form-control searchbox mt-5" })
                        </div>
                    </div>
                    <div class="form-box mt-5 pl-5">
                        @foreach (var item in Model)
                        {
                            @Html.HiddenFor(model => item.EmployeeID)
                            <div class="row">
                                <div class="col-lg-6 mt-5">
                                    @Html.LabelFor(model => item.FirstName, new { @class = "ml-1 font-weight-bold" })
                                    <div class="form-group">
                                        @Html.EditorFor(model => item.FirstName, new { htmlAttributes = new { PlaceHolder = "Enter First Name", @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => item.FirstName, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-lg-6 mt-5">
                                    @Html.LabelFor(model => item.MiddleName, new { @class = "ml-1 font-weight-bold" })
                                    <div class="form-group">
                                        @Html.EditorFor(model => item.MiddleName, new { htmlAttributes = new { PlaceHolder = "Enter Middle Name", @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => item.MiddleName, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-lg-6 mt-5">
                                    @Html.LabelFor(model => item.LastName, new { @class = "ml-1 font-weight-bold" })
                                    <div class="form-group">
                                        @Html.EditorFor(model => item.LastName, new { htmlAttributes = new { PlaceHolder = "Enter Last Name", @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => item.LastName, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-lg-6 mt-5">
                                    @Html.LabelFor(model => item.EmployeeType, new { @class = "ml-1 font-weight-bold" })
                                    <div class="form-group">
                                        <div class="form-group">
                                            @Html.DropDownList("EmployeeType", new SelectList(Enum.GetValues(typeof(EmpType))), "Employee Type", new { @class = "form-control EmployeeType" })
                                            @Html.ValidationMessageFor(model => item.EmployeeType, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-lg-6 mt-5">
                                    @Html.LabelFor(model => item.Email, new { @class = "ml-1 font-weight-bold" })
                                    <div class="form-group">
                                        @Html.EditorFor(model => item.Email, new { htmlAttributes = new { PlaceHolder = "Enter Email", @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => item.Email, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-lg-6 mt-5">
                                    @Html.LabelFor(model => item.Gender, new { @class = "ml-1 font-weight-bold" })
                                    <div class="form-group">
                                        @Html.DropDownList("Gender", new SelectList(Enum.GetValues(typeof(Gender))), "Choose Gender", new { @class = "form-control Gender" })
                                        @Html.ValidationMessageFor(model => item.Gender, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-lg-6 mt-5">
                                    @Html.LabelFor(model => item.PresentAddress, new { @class = "ml-1 font-weight-bold" })
                                    <div class="form-group">
                                        @Html.TextAreaFor(model => item.PresentAddress, new { @rows = "3", @cols = "10", PlaceHolder = "Enter Present Address", @class = "form-control" })
                                        @Html.ValidationMessageFor(model => item.PresentAddress, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-lg-6 mt-5">
                                    @Html.LabelFor(model => item.PresentDistrictID, new { @class = "ml-1 font-weight-bold" })
                                    <div class="form-group">
                                        @Html.DropDownList("PresentDistrictID", Enumerable.Empty<SelectListItem>(), "Present DistrictID", new { @class = "form-control District" })
                                        @Html.ValidationMessageFor(model => item.PresentDistrictID, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-lg-6 mt-5">
                                    @Html.LabelFor(model => item.PresentTalukaID, new { @class = "ml-1 font-weight-bold" })
                                    <div class="form-group">
                                        @Html.DropDownList("PresentTalukaID", Enumerable.Empty<SelectListItem>(), "Present TalukaID", new { @class = "form-control PresentTaluka" })
                                        @Html.ValidationMessageFor(model => item.PresentTalukaID, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-lg-6 mt-5">
                                    @Html.LabelFor(model => item.PresentPINCODE, new { @class = "ml-1 font-weight-bold" })
                                    <div class="form-group">
                                        @Html.EditorFor(model => item.PresentPINCODE, new { htmlAttributes = new { PlaceHolder = "Enter Present PINCODE", @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => item.PresentPINCODE, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-lg-6 mt-5">
                                    @Html.LabelFor(model => item.NativeAddress, new { @class = "ml-1 font-weight-bold" })
                                    <div class="form-group">
                                        @Html.TextAreaFor(model => item.NativeAddress, new { @rows = "3", @cols = "10", PlaceHolder = "Enter Native Address", @class = "form-control" })
                                        @Html.ValidationMessageFor(model => item.NativeAddress, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-lg-6 mt-5">
                                    @Html.LabelFor(model => item.NativeDistrictID, new { @class = "ml-1 font-weight-bold" })
                                    <div class="form-group">
                                        @Html.DropDownList("NativeDistrictID", Enumerable.Empty<SelectListItem>(), "Native DistrictID", new { @class = "form-control NativeDistrict" })
                                        @Html.ValidationMessageFor(model => item.NativeDistrictID, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-lg-6 mt-5">
                                    @Html.LabelFor(model => item.NativeTalukaID, new { @class = "ml-1 font-weight-bold" })
                                    <div class="form-group">
                                        @Html.DropDownList("NativeTalukaID", Enumerable.Empty<SelectListItem>(), "Native TalukaID", new { @class = "form-control NativeTaluka" })
                                        @Html.ValidationMessageFor(model => item.NativeTalukaID, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-lg-6 mt-5">
                                    @Html.LabelFor(model => item.NativePINCODE, new { @class = "ml-1 font-weight-bold" })
                                    <div class="form-group">
                                        @Html.EditorFor(model => item.PresentPINCODE, new { htmlAttributes = new { PlaceHolder = "Enter Native PINCODE", @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => item.PresentPINCODE, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>




                            <div class="row">
                                <div class="col-lg-6 mt-5">
                                    @Html.LabelFor(model => item.PhoneNumber, new { @class = "ml-1 font-weight-bold" })
                                    <div class="form-group">
                                        @Html.EditorFor(model => item.PhoneNumber, new { htmlAttributes = new { PlaceHolder = "Enter Phone Number", @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => item.PhoneNumber, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-lg-6 mt-5">
                                    @Html.LabelFor(model => item.AlternatePhoneNumber, new { @class = "ml-1 font-weight-bold" })
                                    <div class="form-group">
                                        @Html.EditorFor(model => item.AlternatePhoneNumber, new { htmlAttributes = new { PlaceHolder = "Enter Alternate Number", @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => item.AlternatePhoneNumber, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-lg-6 mt-5">
                                    @Html.LabelFor(model => item.EmergencyContactNumber, new { @class = "ml-1 font-weight-bold" })
                                    <div class="form-group">
                                        @Html.EditorFor(model => item.EmergencyContactNumber, new { htmlAttributes = new { PlaceHolder = "Emergency Phone Number", @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => item.EmergencyContactNumber, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-lg-6 mt-5">
                                    @Html.LabelFor(model => item.EmergencyContactName, new { @class = "ml-1 font-weight-bold" })
                                    <div class="form-group">
                                        @Html.EditorFor(model => item.EmergencyContactName, new { htmlAttributes = new { PlaceHolder = "Emergency ContactName", @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => item.EmergencyContactName, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-lg-6 mt-5">
                                    @Html.LabelFor(model => item.DateOfBirth, new { @class = "ml-1 font-weight-bold" })
                                    <div class="form-group">
                                        @Html.EditorFor(model => item.DateOfBirth, new { htmlAttributes = new { @type = "date", @class = "form-control DOB" } })
                                        @Html.ValidationMessageFor(model => item.DateOfBirth, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-lg-6 mt-5">
                                    @Html.LabelFor(model => item.Dateofjoin, new { @class = "ml-1 font-weight-bold" })
                                    <div class="form-group">
                                        @Html.EditorFor(model => item.Dateofjoin, new { htmlAttributes = new { @type = "date", @class = "form-control DOJ", @value = item.Dateofjoin } })
                                        @Html.ValidationMessageFor(model => item.Dateofjoin, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-lg-6 mt-5">
                                    @Html.LabelFor(model => item.DateofRetirement, new { @class = "ml-1 font-weight-bold" })
                                    <div class="form-group">
                                        @Html.EditorFor(model => item.DateofRetirement, new { htmlAttributes = new { @class = "form-control DOR" } })
                                        @Html.ValidationMessageFor(model => item.DateofRetirement, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-lg-6 mt-5">
                                    @Html.LabelFor(model => item.DistrictJoiningDate, new { @class = "ml-1 font-weight-bold" })
                                    <div class="form-group">
                                        @Html.EditorFor(model => item.DistrictJoiningDate, new { htmlAttributes = new { @type = "date", @class = "form-control DODJ" } })
                                        @Html.ValidationMessageFor(model => item.DistrictJoiningDate, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-lg-6 mt-5">
                                    @Html.LabelFor(model => item.EmployeeEntryinDistrict, new { @class = "ml-1 font-weight-bold" })
                                    <div class="form-group">
                                        @Html.DropDownList("EmployeeEntryinDistrict", new SelectList(Enum.GetValues(typeof(EmployeeEntry))), "Employee Entry", new { @class = "form-control EmpEntry" })
                                        @Html.ValidationMessageFor(model => item.EmployeeEntryinDistrict, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-lg-6 mt-5">
                                    @Html.LabelFor(model => item.AgencyID, new { @class = "ml-1 font-weight-bold" })
                                    <div class="form-group">
                                        @Html.DropDownList("AgencyID", Enumerable.Empty<SelectListItem>(), "AgencyID", new { PlaceHolder = "Agency ID", @class = "form-control Agency" })
                                        @Html.ValidationMessageFor(model => item.AgencyID, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-lg-6 mt-5">
                                    @Html.LabelFor(model => item.CreatedBy, new { @class = "ml-1 font-weight-bold" })
                                    <div class="form-group">
                                        @Html.EditorFor(model => item.CreatedBy, new { htmlAttributes = new { PlaceHolder = "Created By", @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => item.CreatedBy, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-lg-6 mt-5">
                                    @Html.LabelFor(model => item.UpdatedBy, new { @class = "ml-1 font-weight-bold" })
                                    <div class="form-group">
                                        @Html.EditorFor(model => item.UpdatedBy, new { htmlAttributes = new { placeholder = "Updated By", @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => item.UpdatedBy, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="submit text-center mt-5">
                                <button type="submit" class="btn btn-primary font-weight-bold p-2 px-5 mx-auto">Submit</button>
                            </div>
                        }
                    </div>
                }
            </div>
        </div>
    </div>
</body>
</html>
<link href="~/Content/jquery-ui.css" rel="stylesheet" />
<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script type="text/javascript">
    $(document).ready(function () {


        var options = "";
        $.ajax({
            url: "/Employee/GetAllAgencies",
            type: "GET",
            datatype: "json",
            success: function (data) {
                for (var i = 0; i < data.length; i++) {
                    options = '<option value="' + (i + 1) + '">' + data[i] + '</option>';
                    $(".Agency").append(options);
                }
            },
            error: function (e) {
                alert(e.statusText);
            }
        });

        $.ajax({
            url: "/Employee/GetAllDistrict",
            type: "GET",
            dataType: "json",
            success: function (data) {
                for (var i = 0; i < data.length; i++) {
                    options = '<option value="' + (i + 1) + '">' + data[i] + '</option>';
                    $(".District").append(options);
                    $(".NativeDistrict").append(options);
                }
            },
            error: function (e) {
                alert(e.statusText);
            }
        });



        $(".District").change(function () {
            var DistrictID = $(".District").val();
            var length = $(".PresentTaluka").length;
            var options = '';
            $.ajax({
                url: "/Employee/GetAllTalukas",
                type: "GET",
                data: { 'Empid': DistrictID },
                dataType: "json",
                success: function (data) {
                    if (length > 0) {
                        $(".PresentTaluka").empty();
                    }
                    for (var i = 0; i < data.length; i++) {
                        options = '<option value="' + (i + 1) + '">' + data[i] + '</option>';
                        $(".PresentTaluka").append(options);
                    }
                },
                error: function (e) {
                    alert(e.statusText);
                }
            });
        });


        $(".NativeDistrict").change(function () {
            var DistrictID = $(".NativeDistrict").val();
            //alert(DistrictID); new SelectList((System.Collections.IEnumerable)ViewData["District"])
            var options = '';
            var length = $(".NativeTaluka").length;
            $.ajax({
                url: "/Employee/GetAllTalukas",
                type: "GET",
                data: { 'Empid': DistrictID },
                dataType: "json",
                success: function (data) {
                    if (length > 0) {
                        $(".NativeTaluka").empty();
                    }
                    for (var i = 0; i < data.length; i++) {
                        options = '<option value="' + (i + 1) + '">' + data[i] + '</option>';
                        $(".NativeTaluka").append(options);
                    }
                },
                error: function (e) {
                    alert(e.statusText);
                }
            });
        });
    });
</script>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

